{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport axios from 'axios';\nimport router from '../router';\nexport default {\n  name: 'RegisterPage',\n  data() {\n    return {\n      credentials: {\n        username: '',\n        email: '',\n        password: '',\n        password2: '',\n        first_name: '',\n        last_name: ''\n      },\n      showMsg: '',\n      errorMessage: '',\n      loading: false\n    };\n  },\n  methods: {\n    async register() {\n      this.loading = true;\n      this.showMsg = '';\n\n      // Password validation\n      if (this.credentials.password !== this.credentials.password2) {\n        this.showMsg = 'error';\n        this.errorMessage = 'Passwords do not match';\n        this.loading = false;\n        return;\n      }\n      try {\n        const response = await axios.post('http://localhost:8000/register/', this.credentials);\n        if (response.status === 201) {\n          router.push('/auth');\n        }\n      } catch (error) {\n        this.showMsg = 'error';\n        if (error.response) {\n          if (error.response.status === 400) {\n            this.errorMessage = error.response.data.detail || 'Registration failed';\n          } else {\n            this.errorMessage = 'Server error. Please try again later.';\n          }\n        } else {\n          this.errorMessage = 'Network error. Check your connection.';\n        }\n      } finally {\n        this.loading = false;\n      }\n    }\n  }\n};","map":{"version":3,"names":["axios","router","name","data","credentials","username","email","password","password2","first_name","last_name","showMsg","errorMessage","loading","methods","register","response","post","status","push","error","detail"],"sources":["/Users/leothecub/PycharmProjects/pythonActivities/trackspend-fe/src/components/Register.vue"],"sourcesContent":["<!-- src/components/Register.vue -->\n<template>\n    <div class=\"auth-page\">  \n      <main class=\"auth-container\">\n        <div class=\"auth-card\">\n          <h2 class=\"auth-title\">Create Account</h2>\n          \n          <div v-if=\"showMsg === 'error'\" class=\"auth-alert error\">\n            {{ errorMessage }}\n          </div>\n  \n          <form @submit.prevent=\"register\" class=\"auth-form\">\n            <div class=\"form-group\">\n              <label>Username</label>\n              <input\n                v-model=\"credentials.username\"\n                type=\"text\"\n                required\n                class=\"form-input\"\n                placeholder=\"Enter username\"\n              />\n            </div>\n  \n            <div class=\"form-group\">\n              <label>Email</label>\n              <input\n                v-model=\"credentials.email\"\n                type=\"email\"\n                required\n                class=\"form-input\"\n                placeholder=\"Enter email\"\n              />\n            </div>\n  \n            <div class=\"form-group\">\n              <label>Password</label>\n              <input\n                v-model=\"credentials.password\"\n                type=\"password\"\n                required\n                class=\"form-input\"\n                placeholder=\"Enter password\"\n              />\n            </div>\n  \n            <div class=\"form-group\">\n              <label>Confirm Password</label>\n              <input\n                v-model=\"credentials.password2\"\n                type=\"password\"\n                required\n                class=\"form-input\"\n                placeholder=\"Confirm password\"\n              />\n            </div>\n  \n            <div class=\"name-fields\">\n              <div class=\"form-group\">\n                <label>First Name</label>\n                <input\n                  v-model=\"credentials.first_name\"\n                  type=\"text\"\n                  class=\"form-input\"\n                  placeholder=\"First name\"\n                />\n              </div>\n  \n              <div class=\"form-group\">\n                <label>Last Name</label>\n                <input\n                  v-model=\"credentials.last_name\"\n                  type=\"text\"\n                  class=\"form-input\"\n                  placeholder=\"Last name\"\n                />\n              </div>\n            </div>\n  \n            <button type=\"submit\" class=\"auth-button\">\n              {{ loading ? 'Creating Account...' : 'Register' }}\n            </button>\n          </form>\n  \n          <div class=\"auth-footer\">\n            <p>Already have an account? <router-link to=\"/auth\">Login here</router-link></p>\n          </div>\n        </div>\n      </main>\n    </div>\n  </template>\n  \n  <script>\n  import axios from 'axios';\n  import router from '../router';\n  \n  export default {\n    name: 'RegisterPage',\n    data() {\n      return {\n        credentials: {\n          username: '',\n          email: '',\n          password: '',\n          password2: '',\n          first_name: '',\n          last_name: ''\n        },\n        showMsg: '',\n        errorMessage: '',\n        loading: false\n      };\n    },\n    methods: {\n      async register() {\n        this.loading = true;\n        this.showMsg = '';\n        \n        // Password validation\n        if (this.credentials.password !== this.credentials.password2) {\n          this.showMsg = 'error';\n          this.errorMessage = 'Passwords do not match';\n          this.loading = false;\n          return;\n        }\n  \n        try {\n          const response = await axios.post(\n            'http://localhost:8000/register/',\n            this.credentials\n          );\n  \n          if (response.status === 201) {\n            router.push('/auth');\n          }\n        } catch (error) {\n          this.showMsg = 'error';\n          if (error.response) {\n            if (error.response.status === 400) {\n              this.errorMessage = error.response.data.detail || 'Registration failed';\n            } else {\n              this.errorMessage = 'Server error. Please try again later.';\n            }\n          } else {\n            this.errorMessage = 'Network error. Check your connection.';\n          }\n        } finally {\n          this.loading = false;\n        }\n      }\n    }\n  };\n  </script>\n  \n  <style scoped>\n  /* Reuse auth-page styles from Auth.vue */\n  .auth-page {\n    display: flex;\n    flex-direction: column;\n    min-height: 100vh;\n  }\n  \n  .auth-container {\n    flex: 1;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    padding: 2rem;\n    background-color: #f5f7fb;\n  }\n  \n  .auth-card {\n    background: white;\n    padding: 2.5rem;\n    border-radius: 12px;\n    box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);\n    width: 100%;\n    max-width: 500px;\n  }\n  \n  .auth-title {\n    text-align: center;\n    color: #2c3e50;\n    margin-bottom: 2rem;\n    font-size: 1.8rem;\n  }\n  \n  .auth-form {\n    display: flex;\n    flex-direction: column;\n    gap: 1.5rem;\n  }\n  \n  .form-group {\n    display: flex;\n    flex-direction: column;\n    gap: 0.5rem;\n  }\n  \n  .form-input {\n    padding: 0.8rem;\n    border: 1px solid #e0e0e0;\n    border-radius: 6px;\n    font-size: 1rem;\n    transition: border-color 0.3s ease;\n  }\n  \n  .form-input:focus {\n    outline: none;\n    border-color: #42b983;\n  }\n  \n  .name-fields {\n    display: grid;\n    grid-template-columns: 1fr 1fr;\n    gap: 1rem;\n  }\n  \n  .auth-button {\n    background-color: #6b8068;\n    color: white;\n    padding: 1rem;\n    border: none;\n    border-radius: 6px;\n    font-size: 1rem;\n    font-weight: 600;\n    cursor: pointer;\n    transition: background-color 0.3s ease;\n  }\n  \n  .auth-button:hover {\n    background-color: #359768;\n  }\n  \n  .auth-alert {\n    padding: 1rem;\n    border-radius: 6px;\n    margin-bottom: 1.5rem;\n  }\n  \n  .error {\n    background-color: #fee2e2;\n    color: #dc2626;\n    border: 1px solid #fca5a5;\n  }\n  \n  .auth-footer {\n    text-align: center;\n    margin-top: 1.5rem;\n    color: #666;\n  }\n  \n  .auth-footer a {\n    color: #42b983;\n    text-decoration: none;\n    font-weight: 500;\n  }\n  \n  .auth-footer a:hover {\n    text-decoration: underline;\n  }\n  \n  /* Header styles from previous components */\n  .header {\n    background-color: #2c3e50;\n    padding: 1rem 2rem;\n  }\n  \n  .navbar {\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n    max-width: 1200px;\n    margin: 0 auto;\n  }\n  \n  .logo a {\n    color: white;\n    font-size: 1.5rem;\n    font-weight: bold;\n    text-decoration: none;\n  }\n  \n  .nav-links {\n    display: flex;\n    gap: 2rem;\n    align-items: center;\n  }\n  \n  .sign-in-button {\n    background-color: #42b983;\n    color: white;\n    padding: 0.5rem 1rem;\n    border-radius: 5px;\n    text-decoration: none;\n  }\n  \n  .sign-in-button:hover {\n    background-color: #359768;\n  }\n  \n  @media (max-width: 768px) {\n    .name-fields {\n      grid-template-columns: 1fr;\n    }\n    \n    .auth-card {\n      padding: 1.5rem;\n    }\n  }\n  </style>"],"mappings":";AA4FE,OAAOA,KAAI,MAAO,OAAO;AACzB,OAAOC,MAAK,MAAO,WAAW;AAE9B,eAAe;EACbC,IAAI,EAAE,cAAc;EACpBC,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,WAAW,EAAE;QACXC,QAAQ,EAAE,EAAE;QACZC,KAAK,EAAE,EAAE;QACTC,QAAQ,EAAE,EAAE;QACZC,SAAS,EAAE,EAAE;QACbC,UAAU,EAAE,EAAE;QACdC,SAAS,EAAE;MACb,CAAC;MACDC,OAAO,EAAE,EAAE;MACXC,YAAY,EAAE,EAAE;MAChBC,OAAO,EAAE;IACX,CAAC;EACH,CAAC;EACDC,OAAO,EAAE;IACP,MAAMC,QAAQA,CAAA,EAAG;MACf,IAAI,CAACF,OAAM,GAAI,IAAI;MACnB,IAAI,CAACF,OAAM,GAAI,EAAE;;MAEjB;MACA,IAAI,IAAI,CAACP,WAAW,CAACG,QAAO,KAAM,IAAI,CAACH,WAAW,CAACI,SAAS,EAAE;QAC5D,IAAI,CAACG,OAAM,GAAI,OAAO;QACtB,IAAI,CAACC,YAAW,GAAI,wBAAwB;QAC5C,IAAI,CAACC,OAAM,GAAI,KAAK;QACpB;MACF;MAEA,IAAI;QACF,MAAMG,QAAO,GAAI,MAAMhB,KAAK,CAACiB,IAAI,CAC/B,iCAAiC,EACjC,IAAI,CAACb,WACP,CAAC;QAED,IAAIY,QAAQ,CAACE,MAAK,KAAM,GAAG,EAAE;UAC3BjB,MAAM,CAACkB,IAAI,CAAC,OAAO,CAAC;QACtB;MACF,EAAE,OAAOC,KAAK,EAAE;QACd,IAAI,CAACT,OAAM,GAAI,OAAO;QACtB,IAAIS,KAAK,CAACJ,QAAQ,EAAE;UAClB,IAAII,KAAK,CAACJ,QAAQ,CAACE,MAAK,KAAM,GAAG,EAAE;YACjC,IAAI,CAACN,YAAW,GAAIQ,KAAK,CAACJ,QAAQ,CAACb,IAAI,CAACkB,MAAK,IAAK,qBAAqB;UACzE,OAAO;YACL,IAAI,CAACT,YAAW,GAAI,uCAAuC;UAC7D;QACF,OAAO;UACL,IAAI,CAACA,YAAW,GAAI,uCAAuC;QAC7D;MACF,UAAU;QACR,IAAI,CAACC,OAAM,GAAI,KAAK;MACtB;IACF;EACF;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}