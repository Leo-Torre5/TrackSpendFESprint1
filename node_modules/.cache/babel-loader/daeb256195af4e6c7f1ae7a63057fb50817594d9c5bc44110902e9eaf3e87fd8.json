{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { APIService } from '@/http/APIService';\nconst apiService = new APIService();\nexport default {\n  name: 'BudgetCreateUpdate',\n  data() {\n    return {\n      budget: {\n        category: '',\n        amount: 0,\n        current_spending: 0,\n        start_date: new Date().toISOString().split('T')[0],\n        end_date: new Date().toISOString().split('T')[0]\n      },\n      pageTitle: 'New Budget',\n      showMsg: '',\n      errorMessage: '',\n      loading: false,\n      isUpdate: false\n    };\n  },\n  beforeCreate() {\n    const isAuthenticated = localStorage.getItem('access_token');\n    if (!isAuthenticated) {\n      this.$router.push('/auth');\n    }\n  },\n  async mounted() {\n    if (this.$route.params.id) {\n      this.isUpdate = true;\n      this.pageTitle = 'Edit Budget';\n      await this.fetchBudget();\n    }\n  },\n  methods: {\n    async fetchBudget() {\n      try {\n        const response = await apiService.getBudget(this.$route.params.id);\n        this.budget = {\n          ...response.data,\n          start_date: response.data.start_date.split('T')[0],\n          end_date: response.data.end_date.split('T')[0]\n        };\n      } catch (error) {\n        this.handleError(error);\n      }\n    },\n    async handleSubmit() {\n      this.loading = true;\n      this.showMsg = '';\n      try {\n        const budgetData = {\n          ...this.budget,\n          amount: parseFloat(this.budget.amount),\n          current_spending: parseFloat(this.budget.current_spending)\n        };\n        if (this.isUpdate) {\n          await apiService.updateBudget(this.$route.params.id, budgetData);\n        } else {\n          await apiService.createBudget(budgetData);\n        }\n        this.$router.push('/budgets');\n      } catch (error) {\n        this.handleError(error);\n      } finally {\n        this.loading = false;\n      }\n    },\n    handleError(error) {\n      this.showMsg = 'error';\n      if (error.response) {\n        switch (error.response.status) {\n          case 400:\n            this.errorMessage = this.parseValidationErrors(error.response.data);\n            break;\n          case 401:\n            localStorage.removeItem('access_token');\n            this.$router.push('/auth');\n            break;\n          default:\n            this.errorMessage = 'Error saving budget. Please try again.';\n        }\n      } else {\n        this.errorMessage = 'Network error. Please check your connection.';\n      }\n    },\n    parseValidationErrors(errors) {\n      return Object.values(errors).join(' ');\n    },\n    cancel() {\n      this.$router.push('/budgets');\n    }\n  }\n};","map":{"version":3,"names":["APIService","apiService","name","data","budget","category","amount","current_spending","start_date","Date","toISOString","split","end_date","pageTitle","showMsg","errorMessage","loading","isUpdate","beforeCreate","isAuthenticated","localStorage","getItem","$router","push","mounted","$route","params","id","fetchBudget","methods","response","getBudget","error","handleError","handleSubmit","budgetData","parseFloat","updateBudget","createBudget","status","parseValidationErrors","removeItem","errors","Object","values","join","cancel"],"sources":["/Users/leothecub/PycharmProjects/pythonActivities/trackspend-fe/src/components/BudgetCreateUpdate.vue"],"sourcesContent":["<template>\n    <div class=\"budget-form\">\n  \n      <main class=\"main-content\">\n        <div class=\"auth-card\">\n          <h2 class=\"auth-title\">{{ pageTitle }}</h2>\n          \n          <div v-if=\"showMsg === 'error'\" class=\"auth-alert error\">\n            {{ errorMessage }}\n          </div>\n  \n          <form @submit.prevent=\"handleSubmit\" class=\"budget-form-content\">\n            <div class=\"form-group\">\n              <label>Category</label>\n              <select v-model=\"budget.category\" class=\"form-input\" required>\n                <option value=\"\">Select Category</option>\n                <option value=\"Food\">Food</option>\n                <option value=\"Transportation\">Transportation</option>\n                <option value=\"Housing\">Housing</option>\n                <option value=\"Entertainment\">Entertainment</option>\n                <option value=\"Utilities\">Utilities</option>\n                <option value=\"Other\">Other</option>\n              </select>\n            </div>\n  \n            <div class=\"form-row\">\n              <div class=\"form-group\">\n                <label>Budget Amount</label>\n                <input\n                  v-model.number=\"budget.amount\"\n                  type=\"number\"\n                  step=\"0.01\"\n                  min=\"0\"\n                  required\n                  class=\"form-input\"\n                  placeholder=\"0.00\"\n                />\n              </div>\n  \n              <div class=\"form-group\">\n                <label>Current Spending</label>\n                <input\n                  v-model.number=\"budget.current_spending\"\n                  type=\"number\"\n                  step=\"0.01\"\n                  min=\"0\"\n                  class=\"form-input\"\n                  placeholder=\"0.00\"\n                  :disabled=\"isUpdate\"\n                />\n              </div>\n            </div>\n  \n            <div class=\"form-row\">\n              <div class=\"form-group\">\n                <label>Start Date</label>\n                <input\n                  v-model=\"budget.start_date\"\n                  type=\"date\"\n                  required\n                  class=\"form-input\"\n                  :max=\"budget.end_date\"\n                />\n              </div>\n  \n              <div class=\"form-group\">\n                <label>End Date</label>\n                <input\n                  v-model=\"budget.end_date\"\n                  type=\"date\"\n                  required\n                  class=\"form-input\"\n                  :min=\"budget.start_date\"\n                />\n              </div>\n            </div>\n  \n            <div class=\"action-buttons\">\n              <button type=\"submit\" class=\"auth-button\" :disabled=\"loading\">\n                {{ loading ? 'Saving...' : 'Save Budget' }}\n              </button>\n              <button type=\"button\" class=\"auth-button secondary\" @click=\"cancel\">\n                Cancel\n              </button>\n            </div>\n          </form>\n        </div>\n      </main>\n    </div>\n  </template>\n  \n  <script>\n  import { APIService } from '@/http/APIService';\n  const apiService = new APIService();\n  \n  export default {\n    name: 'BudgetCreateUpdate',\n    data() {\n      return {\n        budget: {\n          category: '',\n          amount: 0,\n          current_spending: 0,\n          start_date: new Date().toISOString().split('T')[0],\n          end_date: new Date().toISOString().split('T')[0]\n        },\n        pageTitle: 'New Budget',\n        showMsg: '',\n        errorMessage: '',\n        loading: false,\n        isUpdate: false\n      };\n    },\n    beforeCreate() {\n      const isAuthenticated = localStorage.getItem('access_token');\n      if (!isAuthenticated) {\n        this.$router.push('/auth');\n      }\n    },\n    async mounted() {\n      if (this.$route.params.id) {\n        this.isUpdate = true;\n        this.pageTitle = 'Edit Budget';\n        await this.fetchBudget();\n      }\n    },\n    methods: {\n      async fetchBudget() {\n        try {\n          const response = await apiService.getBudget(this.$route.params.id);\n          this.budget = {\n            ...response.data,\n            start_date: response.data.start_date.split('T')[0],\n            end_date: response.data.end_date.split('T')[0]\n          };\n        } catch (error) {\n          this.handleError(error);\n        }\n      },\n      async handleSubmit() {\n        this.loading = true;\n        this.showMsg = '';\n        \n        try {\n          const budgetData = {\n            ...this.budget,\n            amount: parseFloat(this.budget.amount),\n            current_spending: parseFloat(this.budget.current_spending)\n          };\n  \n          if (this.isUpdate) {\n            await apiService.updateBudget(this.$route.params.id, budgetData);\n          } else {\n            await apiService.createBudget(budgetData);\n          }\n          \n          this.$router.push('/budgets');\n        } catch (error) {\n          this.handleError(error);\n        } finally {\n          this.loading = false;\n        }\n      },\n      handleError(error) {\n        this.showMsg = 'error';\n        if (error.response) {\n          switch (error.response.status) {\n            case 400:\n              this.errorMessage = this.parseValidationErrors(error.response.data);\n              break;\n            case 401:\n              localStorage.removeItem('access_token');\n              this.$router.push('/auth');\n              break;\n            default:\n              this.errorMessage = 'Error saving budget. Please try again.';\n          }\n        } else {\n          this.errorMessage = 'Network error. Please check your connection.';\n        }\n      },\n      parseValidationErrors(errors) {\n        return Object.values(errors).join(' ');\n      },\n      cancel() {\n        this.$router.push('/budgets');\n      }\n    }\n  };\n  </script>\n  \n  <style scoped>\n  .budget-form-content {\n    max-width: 800px;\n    margin: 0 auto;\n  }\n  \n  .form-row {\n    display: grid;\n    grid-template-columns: 1fr 1fr;\n    gap: 1rem;\n    margin-bottom: 1rem;\n  }\n  \n  .form-group {\n    margin-bottom: 1.5rem;\n  }\n  \n  .form-input {\n    width: 100%;\n    padding: 0.8rem;\n    border: 1px solid #e0e0e0;\n    border-radius: 6px;\n    font-size: 1rem;\n  }\n  \n  .form-input:disabled {\n    background-color: #f5f5f5;\n    cursor: not-allowed;\n  }\n  \n  .form-input:focus {\n    outline: none;\n    border-color: #42b983;\n  }\n  \n  .action-buttons {\n    display: flex;\n    gap: 1rem;\n    margin-top: 2rem;\n  }\n  \n  .secondary {\n    background-color: #6c757d;\n  }\n  \n  .secondary:hover {\n    background-color: #5a6268;\n  }\n  \n  @media (max-width: 768px) {\n    .form-row {\n      grid-template-columns: 1fr;\n    }\n  }\n  \n  /* Reuse existing header styles */\n  .header {\n    background-color: #2c3e50;\n    padding: 1rem 2rem;\n  }\n  \n  .navbar {\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n    max-width: 1200px;\n    margin: 0 auto;\n  }\n  \n  .logo a {\n    color: white;\n    font-size: 1.5rem;\n    font-weight: bold;\n    text-decoration: none;\n  }\n  \n  .sign-in-button {\n    background-color: #42b983;\n    color: white;\n    padding: 0.5rem 1rem;\n    border-radius: 5px;\n    text-decoration: none;\n  }\n  \n  .auth-card {\n    max-width: 1200px;\n    margin: 0 auto;\n    padding: 2rem;\n  }\n  \n  .auth-title {\n    text-align: center;\n    margin-bottom: 2rem;\n  }\n  \n  .auth-alert.error {\n    background-color: #fee2e2;\n    color: #dc2626;\n    border: 1px solid #fca5a5;\n    padding: 1rem;\n    margin-bottom: 1.5rem;\n    border-radius: 6px;\n  }\n  </style>"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}