{"ast":null,"code":"import axios from 'axios';\nconst API_URL = 'http://localhost:8000/'; // Update with your production URL\n\nexport class APIService {\n  constructor() {\n    this.apiClient = axios.create({\n      baseURL: API_URL,\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    });\n  }\n\n  // ==================== Authentication ====================\n  authenticateLogin(credentials) {\n    return this.apiClient.post('api/token/', credentials);\n  }\n  refreshToken() {\n    return this.apiClient.post('api/token/refresh/', {\n      refresh: localStorage.getItem('refresh_token')\n    });\n  }\n  registerUser(userData) {\n    return this.apiClient.post('register/', userData);\n  }\n\n  // ==================== Expenses ====================\n  getExpense(expenseId) {\n    return this.apiClient.get(`api/expenses/${expenseId}/`, this.getAuthHeader());\n  }\n  getExpenseList() {\n    return this.apiClient.get('api/expenses/', this.getAuthHeader());\n  }\n  createExpense(expenseData) {\n    return this.apiClient.post('api/expenses/', expenseData, this.getAuthHeader());\n  }\n  updateExpense(expenseId, expenseData) {\n    return this.apiClient.put(`api/expenses/${expenseId}/`, expenseData, this.getAuthHeader());\n  }\n  deleteExpense(expenseId) {\n    return this.apiClient.delete(`api/expenses/${expenseId}/`, this.getAuthHeader());\n  }\n\n  // ==================== Budgets ====================\n  getBudget(budgetId) {\n    return this.apiClient.get(`api/budgets/${budgetId}/`, this.getAuthHeader());\n  }\n  getBudgetList() {\n    return this.apiClient.get('api/budgets/', this.getAuthHeader());\n  }\n  createBudget(budgetData) {\n    return this.apiClient.post('api/budgets/', budgetData, this.getAuthHeader());\n  }\n  updateBudget(budgetId, budgetData) {\n    return this.apiClient.put(`api/budgets/${budgetId}/`, budgetData, this.getAuthHeader());\n  }\n  deleteBudget(budgetId) {\n    return this.apiClient.delete(`api/budgets/${budgetId}/`, this.getAuthHeader());\n  }\n\n  // ==================== Users ====================\n  getUserProfile() {\n    return this.apiClient.get('api/getUser/', this.getAuthHeader());\n  }\n  updateUserProfile(userData) {\n    return this.apiClient.put('api/getUser/', userData, this.getAuthHeader());\n  }\n\n  // ==================== Helper Methods ====================\n  getAuthHeader() {\n    return {\n      headers: {\n        Authorization: `Bearer ${localStorage.getItem('access_token')}`\n      }\n    };\n  }\n\n  // Add request interceptor for token refresh\n  setupInterceptors(store) {\n    this.apiClient.interceptors.request.use(config => {\n      const token = localStorage.getItem('access_token');\n      if (token) {\n        config.headers.Authorization = `Bearer ${token}`;\n      }\n      return config;\n    }, error => Promise.reject(error));\n    this.apiClient.interceptors.response.use(response => response, async error => {\n      const originalRequest = error.config;\n      if (error.response.status === 401 && !originalRequest._retry) {\n        originalRequest._retry = true;\n        try {\n          const response = await this.refreshToken();\n          localStorage.setItem('access_token', response.data.access);\n          return this.apiClient(originalRequest);\n        } catch (refreshError) {\n          localStorage.removeItem('access_token');\n          localStorage.removeItem('refresh_token');\n          store.dispatch('logout');\n          return Promise.reject(refreshError);\n        }\n      }\n      return Promise.reject(error);\n    });\n  }\n}","map":{"version":3,"names":["axios","API_URL","APIService","constructor","apiClient","create","baseURL","headers","authenticateLogin","credentials","post","refreshToken","refresh","localStorage","getItem","registerUser","userData","getExpense","expenseId","get","getAuthHeader","getExpenseList","createExpense","expenseData","updateExpense","put","deleteExpense","delete","getBudget","budgetId","getBudgetList","createBudget","budgetData","updateBudget","deleteBudget","getUserProfile","updateUserProfile","Authorization","setupInterceptors","store","interceptors","request","use","config","token","error","Promise","reject","response","originalRequest","status","_retry","setItem","data","access","refreshError","removeItem","dispatch"],"sources":["/Users/leothecub/PycharmProjects/pythonActivities/trackspend-fe/src/http/APIService.js"],"sourcesContent":["import axios from 'axios';\nconst API_URL = 'http://localhost:8000/'; // Update with your production URL\n\nexport class APIService {\n  constructor() {\n    this.apiClient = axios.create({\n      baseURL: API_URL,\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    });\n  }\n\n  // ==================== Authentication ====================\n  authenticateLogin(credentials) {\n    return this.apiClient.post('api/token/', credentials);\n  }\n\n  refreshToken() {\n    return this.apiClient.post('api/token/refresh/', {\n      refresh: localStorage.getItem('refresh_token')\n    });\n  }\n\n  registerUser(userData) {\n    return this.apiClient.post('register/', userData);\n  }\n\n  // ==================== Expenses ====================\n  getExpense(expenseId) {\n    return this.apiClient.get(`api/expenses/${expenseId}/`, this.getAuthHeader());\n  }\n\n  getExpenseList() {\n    return this.apiClient.get('api/expenses/', this.getAuthHeader());\n  }\n\n  createExpense(expenseData) {\n    return this.apiClient.post('api/expenses/', expenseData, this.getAuthHeader());\n  }\n\n  updateExpense(expenseId, expenseData) {\n    return this.apiClient.put(`api/expenses/${expenseId}/`, expenseData, this.getAuthHeader());\n  }\n\n  deleteExpense(expenseId) {\n    return this.apiClient.delete(`api/expenses/${expenseId}/`, this.getAuthHeader());\n  }\n\n  // ==================== Budgets ====================\n  getBudget(budgetId) {\n    return this.apiClient.get(`api/budgets/${budgetId}/`, this.getAuthHeader());\n  }\n\n  getBudgetList() {\n    return this.apiClient.get('api/budgets/', this.getAuthHeader());\n  }\n\n  createBudget(budgetData) {\n    return this.apiClient.post('api/budgets/', budgetData, this.getAuthHeader());\n  }\n\n  updateBudget(budgetId, budgetData) {\n    return this.apiClient.put(`api/budgets/${budgetId}/`, budgetData, this.getAuthHeader());\n  }\n\n  deleteBudget(budgetId) {\n    return this.apiClient.delete(`api/budgets/${budgetId}/`, this.getAuthHeader());\n  }\n\n  // ==================== Users ====================\n  getUserProfile() {\n    return this.apiClient.get('api/getUser/', this.getAuthHeader());\n  }\n\n  updateUserProfile(userData) {\n    return this.apiClient.put('api/getUser/', userData, this.getAuthHeader());\n  }\n\n  // ==================== Helper Methods ====================\n  getAuthHeader() {\n    return {\n      headers: {\n        Authorization: `Bearer ${localStorage.getItem('access_token')}`\n      }\n    };\n  }\n\n  // Add request interceptor for token refresh\n  setupInterceptors(store) {\n    this.apiClient.interceptors.request.use(\n      (config) => {\n        const token = localStorage.getItem('access_token');\n        if (token) {\n          config.headers.Authorization = `Bearer ${token}`;\n        }\n        return config;\n      },\n      (error) => Promise.reject(error)\n    );\n\n    this.apiClient.interceptors.response.use(\n      (response) => response,\n      async (error) => {\n        const originalRequest = error.config;\n        \n        if (error.response.status === 401 && !originalRequest._retry) {\n          originalRequest._retry = true;\n          \n          try {\n            const response = await this.refreshToken();\n            localStorage.setItem('access_token', response.data.access);\n            return this.apiClient(originalRequest);\n          } catch (refreshError) {\n            localStorage.removeItem('access_token');\n            localStorage.removeItem('refresh_token');\n            store.dispatch('logout');\n            return Promise.reject(refreshError);\n          }\n        }\n        return Promise.reject(error);\n      }\n    );\n  }\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}