{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport \"core-js/modules/es.iterator.constructor.js\";\nimport \"core-js/modules/es.iterator.filter.js\";\nimport { APIService } from '@/http/APIService';\nconst apiService = new APIService();\nexport default {\n  name: 'BudgetsList',\n  data() {\n    return {\n      budgets: [],\n      loading: true,\n      error: '',\n      currentPage: 1,\n      totalPages: 1,\n      itemsPerPage: 10\n    };\n  },\n  async created() {\n    await this.fetchBudgets();\n  },\n  methods: {\n    async fetchBudgets() {\n      try {\n        this.loading = true;\n        const response = await apiService.getBudgetList({\n          page: this.currentPage,\n          page_size: this.itemsPerPage\n        });\n        this.budgets = response.data.results;\n        this.totalPages = Math.ceil(response.data.count / this.itemsPerPage);\n      } catch (error) {\n        this.error = 'Failed to load budgets. Please try again later.';\n        console.error('Error fetching budgets:', error);\n      } finally {\n        this.loading = false;\n      }\n    },\n    formatDate(dateString) {\n      const options = {\n        year: 'numeric',\n        month: 'short',\n        day: 'numeric'\n      };\n      return new Date(dateString).toLocaleDateString(undefined, options);\n    },\n    formatCurrency(amount) {\n      return new Intl.NumberFormat('en-US', {\n        style: 'currency',\n        currency: 'USD'\n      }).format(amount);\n    },\n    progressWidth(budget) {\n      const percentage = Math.min(budget.current_spending / budget.amount * 100, 100);\n      return {\n        width: percentage + '%'\n      };\n    },\n    progressPercentage(budget) {\n      return Math.min(Math.round(budget.current_spending / budget.amount * 100), 100);\n    },\n    editBudget(budgetId) {\n      this.$router.push(`/budgets/${budgetId}`);\n    },\n    async deleteBudget(budgetId) {\n      if (confirm('Are you sure you want to delete this budget?')) {\n        try {\n          await apiService.deleteBudget(budgetId);\n          this.budgets = this.budgets.filter(b => b.id !== budgetId);\n        } catch (error) {\n          this.error = 'Failed to delete budget. Please try again.';\n          console.error('Error deleting budget:', error);\n        }\n      }\n    },\n    changePage(page) {\n      this.currentPage = page;\n      this.fetchBudgets();\n    }\n  }\n};","map":{"version":3,"names":["APIService","apiService","name","data","budgets","loading","error","currentPage","totalPages","itemsPerPage","created","fetchBudgets","methods","response","getBudgetList","page","page_size","results","Math","ceil","count","console","formatDate","dateString","options","year","month","day","Date","toLocaleDateString","undefined","formatCurrency","amount","Intl","NumberFormat","style","currency","format","progressWidth","budget","percentage","min","current_spending","width","progressPercentage","round","editBudget","budgetId","$router","push","deleteBudget","confirm","filter","b","id","changePage"],"sources":["/Users/leothecub/PycharmProjects/pythonActivities/trackspend-fe/src/components/BudgetsList.vue"],"sourcesContent":["<template>\n    <div class=\"budget-list\">\n    \n      <main class=\"main-content\">\n        <div class=\"auth-card\">\n          <h2 class=\"auth-title\">Budgets</h2>\n          <div>\n            <router-link to=\"/budgets/create\" class=\"sign-in-button\">\n              + New Budget\n            </router-link>\n          </div>\n          <div v-if=\"loading\" class=\"loading-message\">\n            <i class=\"fas fa-spinner fa-spin\"></i> Loading budgets...\n          </div>\n  \n          <div v-if=\"error\" class=\"auth-alert error\">\n            {{ error }}\n          </div>\n  \n          <!-- Mobile View -->\n          <div class=\"mobile-view d-md-none\">\n            <div class=\"budget-card\" v-for=\"budget in budgets\" :key=\"budget.id\">\n              <div class=\"card-header\">\n                <h3>{{ budget.category }}</h3>\n                <p>{{ formatCurrency(budget.amount) }}</p>\n              </div>\n              <div class=\"card-body\">\n                <p><strong>Period:</strong> {{ formatDate(budget.start_date) }} - {{ formatDate(budget.end_date) }}</p>\n                <p><strong>Spent:</strong> {{ formatCurrency(budget.current_spending) }}</p>\n                <div class=\"progress-container\">\n                  <div class=\"progress-bar\" :style=\"progressWidth(budget)\"></div>\n                </div>\n                <div class=\"actions\">\n                  <button @click=\"editBudget(budget)\" class=\"icon-button\">\n                    <i class=\"fas fa-edit\"></i>\n                  </button>\n                  <button @click=\"deleteBudget(budget.id)\" class=\"icon-button\">\n                    <i class=\"fas fa-trash\"></i>\n                  </button>\n                </div>\n              </div>\n            </div>\n          </div>\n  \n          <!-- Desktop View -->\n          <table class=\"budget-table\" v-if=\"!loading && budgets.length\">\n            <thead>\n              <tr>\n                <th>Category</th>\n                <th>Budget Amount</th>\n                <th>Spent</th>\n                <th>Period</th>\n                <th>Progress</th>\n                <th>Actions</th>\n              </tr>\n            </thead>\n            <tbody>\n              <tr v-for=\"budget in budgets\" :key=\"budget.id\">\n                <td>{{ budget.category }}</td>\n                <td>{{ formatCurrency(budget.amount) }}</td>\n                <td>{{ formatCurrency(budget.current_spending) }}</td>\n                <td>{{ formatDate(budget.start_date) }} - {{ formatDate(budget.end_date) }}</td>\n                <td>\n                  <div class=\"progress-container\">\n                    <div class=\"progress-bar\" :style=\"progressWidth(budget)\"></div>\n                  </div>\n                  <span class=\"progress-text\">\n                    {{ progressPercentage(budget) }}%\n                  </span>\n                </td>\n                <td class=\"actions\">\n                  <button @click=\"editBudget(budget.id)\" class=\"icon-button\">\n                    <i class=\"fas fa-edit\"></i>\n                  </button>\n                  <button @click=\"deleteBudget(budget.id)\" class=\"icon-button\">\n                    <i class=\"fas fa-trash\"></i>\n                  </button>\n                </td>\n              </tr>\n            </tbody>\n          </table>\n  \n          <div v-if=\"!loading && !budgets.length\" class=\"no-budgets\">\n            <p>No budgets found. <router-link to=\"/budgets/create\">Create your first budget</router-link></p>\n          </div>\n  \n          <div class=\"pagination\" v-if=\"totalPages > 1\">\n            <button \n              v-for=\"page in totalPages\" \n              :key=\"page\" \n              @click=\"changePage(page)\"\n              :class=\"{ active: currentPage === page }\"\n            >\n              {{ page }}\n            </button>\n          </div>\n        </div>\n      </main>\n    </div>\n  </template>\n  \n  <script>\n  import { APIService } from '@/http/APIService';\n  const apiService = new APIService();\n  \n  export default {\n    name: 'BudgetsList',\n    data() {\n      return {\n        budgets: [],\n        loading: true,\n        error: '',\n        currentPage: 1,\n        totalPages: 1,\n        itemsPerPage: 10\n      };\n    },\n    async created() {\n      await this.fetchBudgets();\n    },\n    methods: {\n      async fetchBudgets() {\n        try {\n          this.loading = true;\n          const response = await apiService.getBudgetList({\n            page: this.currentPage,\n            page_size: this.itemsPerPage\n          });\n          \n          this.budgets = response.data.results;\n          this.totalPages = Math.ceil(response.data.count / this.itemsPerPage);\n        } catch (error) {\n          this.error = 'Failed to load budgets. Please try again later.';\n          console.error('Error fetching budgets:', error);\n        } finally {\n          this.loading = false;\n        }\n      },\n  \n      formatDate(dateString) {\n        const options = { year: 'numeric', month: 'short', day: 'numeric' };\n        return new Date(dateString).toLocaleDateString(undefined, options);\n      },\n  \n      formatCurrency(amount) {\n        return new Intl.NumberFormat('en-US', {\n          style: 'currency',\n          currency: 'USD'\n        }).format(amount);\n      },\n  \n      progressWidth(budget) {\n        const percentage = Math.min((budget.current_spending / budget.amount) * 100, 100);\n        return { width: percentage + '%' };\n      },\n  \n      progressPercentage(budget) {\n        return Math.min(Math.round((budget.current_spending / budget.amount) * 100), 100);\n      },\n  \n      editBudget(budgetId) {\n        this.$router.push(`/budgets/${budgetId}`);\n      },\n  \n      async deleteBudget(budgetId) {\n        if (confirm('Are you sure you want to delete this budget?')) {\n          try {\n            await apiService.deleteBudget(budgetId);\n            this.budgets = this.budgets.filter(b => b.id !== budgetId);\n          } catch (error) {\n            this.error = 'Failed to delete budget. Please try again.';\n            console.error('Error deleting budget:', error);\n          }\n        }\n      },\n  \n      changePage(page) {\n        this.currentPage = page;\n        this.fetchBudgets();\n      }\n    }\n  };\n  </script>\n  \n  <style scoped>\n  .budget-list {\n    display: flex;\n    flex-direction: column;\n    min-height: 100vh;\n  }\n  \n  .main-content {\n    flex: 1;\n    padding: 2rem;\n  }\n  \n  .auth-card {\n    max-width: 1200px;\n    margin: 0 auto;\n  }\n  \n  .budget-table {\n    width: 100%;\n    border-collapse: collapse;\n    margin: 1rem 0;\n  }\n  \n  .budget-table th,\n  .budget-table td {\n    padding: 1rem;\n    text-align: left;\n    border-bottom: 1px solid #eee;\n  }\n  \n  .budget-table th {\n    background-color: #f8f9fa;\n  }\n  \n  .mobile-view {\n    display: none;\n  }\n  \n  .budget-card {\n    background: white;\n    border-radius: 8px;\n    box-shadow: 0 2px 4px rgba(0,0,0,0.1);\n    margin-bottom: 1rem;\n    padding: 1rem;\n  }\n  \n  .progress-container {\n    height: 10px;\n    background-color: #eee;\n    border-radius: 5px;\n    overflow: hidden;\n    margin: 0.5rem 0;\n  }\n  \n  .progress-bar {\n    height: 100%;\n    background-color: #42b983;\n    transition: width 0.3s ease;\n  }\n  \n  .progress-text {\n    font-size: 0.9rem;\n    color: #666;\n  }\n  \n  .actions {\n    display: flex;\n    gap: 1rem;\n    margin-top: 1rem;\n  }\n  \n  .icon-button {\n    background: none;\n    border: none;\n    color: #42b983;\n    cursor: pointer;\n    padding: 0.5rem;\n  }\n  \n  .pagination {\n    margin-top: 2rem;\n    display: flex;\n    gap: 0.5rem;\n    justify-content: center;\n  }\n  \n  .pagination button {\n    padding: 0.5rem 1rem;\n    border: 1px solid #42b983;\n    background: none;\n    border-radius: 4px;\n    cursor: pointer;\n  }\n  \n  .pagination button.active {\n    background-color: #42b983;\n    color: white;\n  }\n  \n  .no-budgets {\n    text-align: center;\n    padding: 2rem;\n    color: #666;\n  }\n  \n  .loading-message {\n    text-align: center;\n    padding: 2rem;\n    color: #42b983;\n  }\n  \n  @media (max-width: 768px) {\n    .budget-table {\n      display: none;\n    }\n    \n    .mobile-view {\n      display: block;\n    }\n  }\n  \n  /* Reuse header styles from previous components */\n  .header {\n    background-color: #2c3e50;\n    padding: 1rem 2rem;\n  }\n  \n  .navbar {\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n    max-width: 1200px;\n    margin: 0 auto;\n  }\n  \n  .logo a {\n    color: white;\n    font-size: 1.5rem;\n    font-weight: bold;\n    text-decoration: none;\n  }\n  \n  .sign-in-button {\n    background-color: #2c463f;\n  color: white;\n  }\n  \n  .sign-in-button:hover {\n    background-color: #359768;\n  }\n  </style>"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}